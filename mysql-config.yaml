# storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard
provisioner: kubernetes.io/aws-ebs  # Change based on your provider
allowVolumeExpansion: true
---

# persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysqldata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi  # Updated size
  storageClassName: standard
---

# mysql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mysqldb
    spec:
      containers:
        - name: mysqldb
          image: vforce1520/mysql:8.2
          ports:
            - containerPort: 3306
              protocol: TCP
          env:
            - name: MYSQL_DATABASE
              value: order_schema
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_ROOT_USER
              value: root
          volumeMounts:
            - name: mysqldata
              mountPath: /var/lib/mysql
      restartPolicy: Always
      volumes:
        - name: mysqldata
          persistentVolumeClaim:
            claimName: mysqldata

